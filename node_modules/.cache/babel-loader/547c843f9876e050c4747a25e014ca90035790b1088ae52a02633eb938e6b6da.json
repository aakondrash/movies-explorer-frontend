{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Documents\\\\GitHub\\\\movies-explorer-frontend\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport mainApi from \"../../utils/MainApi\";\nimport moviesApi from \"../../utils/MoviesApi\";\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Main from \"../Main/Main\";\nimport Movies from \"../Movies/Movies\";\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\nimport Page404 from \"../Page404/Page404\";\nimport Register from \"../Register/Register\";\nimport Login from \"../Login/Login\";\nimport Profile from \"../Profile/Profile\";\nimport Popup from \"../Popup/Popup\";\nimport movie_image from \"../../images/movie-template-picture.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Статусы пользователя\n  const [currentUser, setCurrentUser] = useState({\n    email: \"\",\n    name: \"\",\n    _id: \"\"\n  });\n\n  // Статусы Бургер-меню\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isBurgerOpened, setIsBurgerOpened] = useState(false);\n\n  // Статусы фильмов\n  const [moviesList, setMoviesList] = useState([]);\n  const [foundMoviesList, setfoundMoviesList] = useState([]);\n  const [savedMoviesList, setSavedMoviesList] = useState([]);\n\n  // Статус чекбокса\n  const [checkboxStatus, setCheckboxStatus] = useState(true);\n\n  // Статусы отображения прелоадера\n  const [preloaderDisplayState, setPreloaderDisplayState] = useState(false);\n\n  // Статусы отображения попапа\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const [isSucceeded, setIsSucceeded] = useState(false);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const onBurgerClick = () => {\n    setIsBurgerOpened(!isBurgerOpened);\n  };\n  const closePopup = () => {\n    setIsPopupOpened(false);\n  };\n  const processSearchMovieRequest = (movie, isCheckboxOn) => {\n    if (moviesList.length !== 0) {\n      const searchedMovies = moviesList.filter(element => element.nameRU.toLowerCase().includes(movie.toLowerCase()) || element.nameEN.toLowerCase().includes(movie.toLowerCase()));\n      if (searchMovies.length === 0) {\n        setIsSucceeded(false);\n        setPopupMessage(`По ключевому слову \\\"${movie}\\\" фильмов не найдено`);\n        setIsPopupOpened(true);\n      } else {\n        setCheckboxStatus(false);\n        localStorage.setItem(\"requestText\", movie);\n        localStorage.setItem(\"searchedMovies\", JSON.stringify(searchMovies));\n        localStorage.setItem(\"checkboxStatus\", JSON.stringify(checked));\n        setFoundMovies(searchMovies);\n      }\n      return;\n    } else {\n      setPreloaderStatus(true);\n      moviesApi.getMovies().then(moviesFromSearch => {\n        const searchMovies = moviesFromSearch.filter(item => item.nameRU.toLowerCase().includes(movie.toLowerCase()));\n        if (searchMovies.length === 0) {\n          setIsTooltipPopupOpen(true);\n          setPopupText(\"По вашему запросу ничего не найдено.\");\n          setSuccess(false);\n        } else {\n          setCheckboxStatus(false);\n          localStorage.setItem(\"allMovies\", JSON.stringify(moviesFromSearch));\n          setAllMovies(moviesFromSearch);\n          localStorage.setItem(\"movieName\", movie);\n          localStorage.setItem(\"searchedMovies\", JSON.stringify(searchMovies));\n          localStorage.setItem(\"checkboxStatus\", JSON.stringify(checked));\n          setFoundMovies(searchMovies);\n        }\n      }).catch(err => console.log(err)).finally(() => setPreloaderStatus(false));\n    }\n  };\n  useEffect(() => {\n    Promise.all([moviesApi.getAllMovies()]).then(([movies]) => {\n      setMoviesList(movies);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"signin\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLoginClick: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"signup\",\n          element: /*#__PURE__*/_jsxDEV(Register, {\n            onRegisterClick: setIsLoggedIn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Movies, {\n              moviesList: moviesList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SavedMovies, {\n              savedMoviesList: savedMoviesList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Page404, {\n            navigate: navigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        isOpened: isPopupOpened,\n        onClose: closePopup,\n        isSucceeded: isSucceeded,\n        message: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XfNBPe2HDU8pDrPFSNsFNPwmd0Q=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mainApi","moviesApi","Route","Routes","useNavigate","CurrentUserContext","React","useState","useEffect","Header","Footer","Main","Movies","SavedMovies","Page404","Register","Login","Profile","Popup","movie_image","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","currentUser","setCurrentUser","email","name","_id","isLoggedIn","setIsLoggedIn","isBurgerOpened","setIsBurgerOpened","moviesList","setMoviesList","foundMoviesList","setfoundMoviesList","savedMoviesList","setSavedMoviesList","checkboxStatus","setCheckboxStatus","preloaderDisplayState","setPreloaderDisplayState","isPopupOpened","setIsPopupOpened","isSucceeded","setIsSucceeded","popupMessage","setPopupMessage","onBurgerClick","closePopup","processSearchMovieRequest","movie","isCheckboxOn","length","searchedMovies","filter","element","nameRU","toLowerCase","includes","nameEN","searchMovies","localStorage","setItem","JSON","stringify","checked","setFoundMovies","setPreloaderStatus","getMovies","then","moviesFromSearch","item","setIsTooltipPopupOpen","setPopupText","setSuccess","setAllMovies","catch","err","console","log","finally","Promise","all","getAllMovies","movies","Provider","value","children","className","index","fileName","_jsxFileName","lineNumber","columnNumber","path","onLoginClick","onRegisterClick","isOpened","onClose","message","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Documents/GitHub/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport mainApi from \"../../utils/MainApi\";\nimport moviesApi from \"../../utils/MoviesApi\";\n\nimport { Route, Routes, useNavigate } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Main from \"../Main/Main\";\nimport Movies from \"../Movies/Movies\";\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\nimport Page404 from \"../Page404/Page404\";\n\nimport Register from \"../Register/Register\";\nimport Login from \"../Login/Login\";\nimport Profile from \"../Profile/Profile\";\n\nimport Popup from \"../Popup/Popup\";\n\nimport movie_image from \"../../images/movie-template-picture.png\";\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  // Статусы пользователя\n  const [currentUser, setCurrentUser] = useState({\n    email: \"\",\n    name: \"\",\n    _id: \"\",\n  });\n\n  // Статусы Бургер-меню\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isBurgerOpened, setIsBurgerOpened] = useState(false);\n\n  // Статусы фильмов\n  const [moviesList, setMoviesList] = useState([]);\n  const [foundMoviesList, setfoundMoviesList] = useState([]);\n  const [savedMoviesList, setSavedMoviesList] = useState([]);\n\n  // Статус чекбокса\n  const [checkboxStatus, setCheckboxStatus] = useState(true);\n\n  // Статусы отображения прелоадера\n  const [preloaderDisplayState, setPreloaderDisplayState] = useState(false);\n\n  // Статусы отображения попапа\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const [isSucceeded, setIsSucceeded] = useState(false);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n\n  const onBurgerClick = () => {\n    setIsBurgerOpened(!isBurgerOpened);\n  }\n\n  const closePopup = () => {\n    setIsPopupOpened(false);\n  }\n\n  const processSearchMovieRequest = (movie, isCheckboxOn) => {\n    if (moviesList.length !== 0) {\n      const searchedMovies = moviesList.filter((element) =>\n        element.nameRU.toLowerCase().includes(movie.toLowerCase()) || \n        element.nameEN.toLowerCase().includes(movie.toLowerCase())\n      );\n      if (searchMovies.length === 0) {\n        setIsSucceeded(false);\n        setPopupMessage(`По ключевому слову \\\"${movie}\\\" фильмов не найдено`);\n        setIsPopupOpened(true);\n      } else {\n        setCheckboxStatus(false);\n        localStorage.setItem(\"requestText\", movie);\n        localStorage.setItem(\"searchedMovies\", JSON.stringify(searchMovies));\n        localStorage.setItem(\"checkboxStatus\", JSON.stringify(checked));\n        setFoundMovies(searchMovies);\n      }\n      return;\n    } else {\n      setPreloaderStatus(true);\n      moviesApi\n        .getMovies()\n        .then((moviesFromSearch) => {\n          const searchMovies = moviesFromSearch.filter((item) =>\n            item.nameRU.toLowerCase().includes(movie.toLowerCase())\n          );\n          if (searchMovies.length === 0) {\n            setIsTooltipPopupOpen(true);\n            setPopupText(\"По вашему запросу ничего не найдено.\");\n            setSuccess(false);\n          } else {\n            setCheckboxStatus(false);\n            localStorage.setItem(\"allMovies\", JSON.stringify(moviesFromSearch));\n            setAllMovies(moviesFromSearch);\n            localStorage.setItem(\"movieName\", movie);\n            localStorage.setItem(\n              \"searchedMovies\",\n              JSON.stringify(searchMovies)\n            );\n            localStorage.setItem(\"checkboxStatus\", JSON.stringify(checked));\n            setFoundMovies(searchMovies);\n          }\n        })\n        .catch((err) => console.log(err))\n        .finally(() => setPreloaderStatus(false));\n    }\n  }\n\n  useEffect(() => { \n    Promise.all([moviesApi.getAllMovies()])\n      .then(([movies]) => {\n        setMoviesList(movies);\n      })\n      .catch((err) => console.log(err));\n  }, []); \n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"app\">\n        <Routes>\n          <Route index element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Main />\n              <Footer />\n            </>\n          } />\n          <Route path=\"signin\" element={<Login onLoginClick={setIsLoggedIn}/>} />\n          <Route path=\"signup\" element={<Register onRegisterClick={setIsLoggedIn}/>} />\n          <Route path=\"profile\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Profile/>\n            </>\n          } />\n          <Route path=\"movies\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Movies moviesList={moviesList}/>\n              <Footer />\n            </>\n          } />\n          <Route path=\"saved-movies\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <SavedMovies savedMoviesList={savedMoviesList}/>\n              <Footer />\n            </>\n          } />\n          <Route path=\"*\" element={<Page404 navigate={navigate}/>} />\n        </Routes>\n        <Popup\n          isOpened={isPopupOpened}\n          onClose={closePopup}\n          isSucceeded={isSucceeded}\n          message={popupMessage}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}