{"ast":null,"code":"class MainApi {\n  constructor({\n    url\n  }) {\n    this._url = url;\n  }\n  _processResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`Произошла ошибка. Код ошибки: ${res.status}`);\n    }\n  }\n  getUserData() {\n    return fetch(`${this._url}/users/me`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => this._processResponse(res));\n  }\n  setUserData(userData) {\n    return fetch(`${this._url}/users/me`, {\n      method: \"PATCH\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        name: userData.name,\n        email: userData.email\n      })\n    }).then(res => this._processResponse(res));\n  }\n  getSavedMovies() {\n    return fetch(`${this._url}/movies`, {\n      method: \"GET\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => this._processResponse(res));\n  }\n  addNewMovie(movie) {\n    return fetch(`${this._url}/movies`, {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      },\n      body: JSON.stringify({\n        movieId: movie.id,\n        nameRU: movie.nameRU,\n        nameEN: movie.nameEN,\n        description: movie.description,\n        director: movie.director,\n        duration: movie.duration,\n        year: movie.year,\n        country: movie.country,\n        image: `https://api.nomoreparties.co/${movie.image.url}`,\n        trailerLink: movie.trailerLink,\n        thumbnail: `https://api.nomoreparties.co/${movie.image.formats.thumbnail.url}`\n      })\n    }).then(res => this._processResponse(res));\n  }\n  deleteExistentMovie(id) {\n    return fetch(`${this._url}/movies/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"content-type\": \"application/json\",\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => this._processResponse(res));\n  }\n}\nconst mainApi = new MainApi({\n  url: \"http://localhost:3000\"\n});\nexport default mainApi;","map":{"version":3,"names":["MainApi","constructor","url","_url","_processResponse","res","ok","json","Promise","reject","status","getUserData","fetch","method","headers","Authorization","localStorage","getItem","then","setUserData","userData","body","JSON","stringify","name","email","getSavedMovies","addNewMovie","movie","movieId","id","nameRU","nameEN","description","director","duration","year","country","image","trailerLink","thumbnail","formats","deleteExistentMovie","mainApi"],"sources":["C:/Users/Andrey/Documents/GitHub/movies-explorer-frontend/src/utils/MainApi.js"],"sourcesContent":["class MainApi {\r\n    constructor({ url }) {\r\n      this._url = url;\r\n    }\r\n  \r\n    _processResponse(res) {\r\n      if (res.ok) {\r\n        return res.json();\r\n      } else {\r\n        return Promise.reject(`Произошла ошибка. Код ошибки: ${res.status}`);\r\n      }\r\n    }\r\n  \r\n    getUserData() {\r\n      return fetch(`${this._url}/users/me`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\r\n        }\r\n      }).then((res) => this._processResponse(res));\r\n    }\r\n  \r\n    setUserData(userData) {\r\n      return fetch(`${this._url}/users/me`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\r\n        },\r\n        body: JSON.stringify({\r\n          name: userData.name,\r\n          email: userData.email\r\n        })\r\n      }).then((res) => this._processResponse(res));\r\n    }\r\n  \r\n    getSavedMovies() {\r\n      return fetch(`${this._url}/movies`, {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\r\n        }\r\n      }).then((res) => this._processResponse(res));\r\n    }\r\n  \r\n    addNewMovie(movie) {\r\n      return fetch(`${this._url}/movies`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\r\n        },\r\n        body: JSON.stringify({\r\n          movieId: movie.id,\r\n          nameRU: movie.nameRU,\r\n          nameEN: movie.nameEN,\r\n          description: movie.description,\r\n          director: movie.director,\r\n          duration: movie.duration,\r\n          year: movie.year,\r\n          country: movie.country,\r\n          image: `https://api.nomoreparties.co/${movie.image.url}`,\r\n          trailerLink: movie.trailerLink,\r\n          thumbnail: `https://api.nomoreparties.co/${movie.image.formats.thumbnail.url}`\r\n        })\r\n      }).then((res) => this._processResponse(res));\r\n    }\r\n  \r\n    deleteExistentMovie(id) {\r\n      return fetch(`${this._url}/movies/${id}`, {\r\n        method: \"DELETE\",\r\n        headers: {\r\n          \"content-type\": \"application/json\",\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\r\n        }\r\n      }).then((res) => this._processResponse(res));\r\n    }\r\n  }\r\n  \r\n  const mainApi = new MainApi({\r\n    url: \"http://localhost:3000\"\r\n  });\r\n  \r\n  export default mainApi;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}