{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Documents\\\\GitHub\\\\movies-explorer-frontend\\\\src\\\\components\\\\Header\\\\Header.js\";\nimport { Link, Route, Routes } from \"react-router-dom\";\nimport Burger from \"../Burger/Burger\";\nimport NavTab from \"../Main/NavTab/NavTab\";\nimport Navigation from \"../Navigation/Navigation\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = ({\n  isLoggedIn,\n  isBurgerOpened,\n  onBurgerClick\n}) => {\n  const burgerLinks = [\"/movies\", \"/saved-movies\", \"/profile\"];\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header__container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"header__logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [burgerLinks.map(path => /*#__PURE__*/_jsxDEV(Route, {\n          // optional: avoid full re-renders on route changes\n          path: path,\n          element: /*#__PURE__*/_jsxDEV(Burger, {\n            isBurgerOpened: isBurgerOpened,\n            onBurgerClick: onBurgerClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 24\n          }, this)\n        }, \"Burger\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: isLoggedIn ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Navigation, {\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Burger, {\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(NavTab, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Burger, {\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Page404, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["Link","Route","Routes","Burger","NavTab","Navigation","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","isLoggedIn","isBurgerOpened","onBurgerClick","burgerLinks","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","map","path","element","exact","Page404","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Documents/GitHub/movies-explorer-frontend/src/components/Header/Header.js"],"sourcesContent":["import { Link, Route, Routes } from \"react-router-dom\";\r\nimport Burger from \"../Burger/Burger\";\r\nimport NavTab from \"../Main/NavTab/NavTab\";\r\nimport Navigation from \"../Navigation/Navigation\";\r\n\r\nconst Header = ({ isLoggedIn, isBurgerOpened, onBurgerClick }) => {\r\n  const burgerLinks = [\"/movies\", \"/saved-movies\", \"/profile\"];\r\n  return (\r\n    <header className=\"header\">\r\n      <div className=\"header__container\">\r\n        <Link to=\"/\">\r\n          <p className=\"header__logo\"></p>\r\n        </Link>\r\n        <Routes>\r\n          {burgerLinks.map(path => (\r\n            <Route \r\n              key=\"Burger\" // optional: avoid full re-renders on route changes\r\n              path={path}\r\n              element={<Burger isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick} />}\r\n            />\r\n          ))}\r\n          <Route exact path=\"/\" element={\r\n            isLoggedIn ? (\r\n              <>\r\n                <Navigation onBurgerClick={onBurgerClick} />\r\n                <Burger isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick} />\r\n              </>\r\n            ) : (\r\n              <>\r\n                <NavTab />\r\n                <Burger isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick} />\r\n              </>\r\n            )\r\n          }/>\r\n          <Route path=\"*\" element={<Page404/>} />\r\n        </Routes>\r\n      </div>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}