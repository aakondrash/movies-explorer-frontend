{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrey\\\\Documents\\\\GitHub\\\\movies-explorer-frontend\\\\src\\\\components\\\\App\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport mainApi from \"../../utils/MainApi\";\nimport moviesApi from \"../../utils/MoviesApi\";\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Main from \"../Main/Main\";\nimport Movies from \"../Movies/Movies\";\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\nimport Page404 from \"../Page404/Page404\";\nimport Register from \"../Register/Register\";\nimport Login from \"../Login/Login\";\nimport Profile from \"../Profile/Profile\";\nimport Popup from \"../Popup/Popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const navigate = useNavigate();\n\n  // Статусы пользователя\n  const [currentUser, setCurrentUser] = useState({\n    email: \"\",\n    name: \"\",\n    _id: \"\"\n  });\n\n  // Статусы Бургер-меню\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isBurgerOpened, setIsBurgerOpened] = useState(false);\n\n  // Статусы фильмов\n  const [moviesList, setMoviesList] = useState([]);\n  const [foundMoviesList, setFoundMoviesList] = useState([]);\n  const [savedMoviesList, setSavedMoviesList] = useState([]);\n\n  // Статус чекбокса\n  const [checkboxState, setCheckboxState] = useState(true);\n\n  // Статусы отображения прелоадера\n  const [preloaderDisplayState, setPreloaderDisplayState] = useState(false);\n\n  // Статусы отображения попапа\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const [isSucceeded, setIsSucceeded] = useState(false);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n  const onBurgerClick = () => {\n    setIsBurgerOpened(!isBurgerOpened);\n  };\n  const closePopup = () => {\n    setIsPopupOpened(false);\n  };\n  const processSearchMovieRequest = (request, isCheckboxOn) => {\n    if (moviesList.length !== 0) {\n      const searchedMovies = moviesList.filter(element => element.nameRU.toLowerCase().includes(request.toLowerCase()) || element.nameEN.toLowerCase().includes(request.toLowerCase()));\n      if (searchedMovies.length === 0) {\n        setIsSucceeded(false);\n        setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\n        setIsPopupOpened(true);\n      } else {\n        setCheckboxState(false);\n        localStorage.setItem(\"requestText\", request);\n        localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\n        localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n        setFoundMoviesList(searchedMovies);\n      }\n      return;\n    } else {\n      setPreloaderDisplayState(true);\n      moviesApi.getAllMovies().then(result => {\n        const searchedMovies = result.filter(element => element.nameRU.toLowerCase().includes(request.toLowerCase()) || element.nameEN.toLowerCase().includes(request.toLowerCase()));\n        if (searchedMovies.length === 0) {\n          setIsSucceeded(false);\n          setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\n          setIsPopupOpened(true);\n        } else {\n          setCheckboxState(false);\n          localStorage.setItem(\"moviesList\", JSON.stringify(result));\n          setMoviesList(result);\n          localStorage.setItem(\"requestText\", request);\n          localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\n          localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n          setFoundMoviesList(searchedMovies);\n        }\n      }).catch(err => console.log(err)).finally(() => setPreloaderDisplayState(false));\n    }\n  };\n  const processSearchSavedMovieRequest = (request, isCheckboxOn) => {\n    setPreloaderDisplayState(true);\n    const searchedSavedMovies = savedMoviesList.filter(element => element.nameRU.toLowerCase().includes(request.toLowerCase()) || element.nameEN.toLowerCase().includes(request.toLowerCase()));\n    if (searchedSavedMovies.length === 0) {\n      setIsPopupOpened(true);\n      setPopupMessage(\"По вашему запросу ничего не найдено.\");\n      setIsSucceeded(false);\n      setPreloaderDisplayState(false);\n    } else {\n      setCheckboxState(false);\n      localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\n      setSavedMoviesList(searchedSavedMovies);\n      setPreloaderDisplayState(false);\n    }\n  };\n  const onChangeCheckboxState = isCheckboxOn => {\n    const movies = JSON.parse(localStorage.getItem(\"searchedMovies\"));\n    let filteredMoviesList = movies;\n    if (isCheckboxOn) {\n      filteredMoviesList = movies.filter(element => element.duration <= 40);\n    }\n    setFoundMoviesList(filteredMoviesList);\n    localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n  };\n  const onChangeCheckboxStateSavedMovies = isCheckboxOn => {\n    if (isCheckboxOn) {\n      setSavedMoviesList(savedMoviesList.filter(element => element.duration <= 40));\n    } else if (!isCheckboxOn) {\n      setSavedMoviesList(savedMoviesList);\n    }\n    localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\n  };\n  const handleUserSignout = () => {\n    localStorage.clear();\n    setMoviesList([]);\n    setFoundMoviesList([]);\n    setSavedMoviesList([]);\n    setCurrentUser({\n      name: \"\",\n      email: \"\",\n      id: \"\"\n    });\n    setIsLoggedIn(false);\n    navigate(\"/\");\n  };\n  const checkTokenExistance = () => {\n    if (localStorage.getItem(\"jwt\")) {\n      mainApi.getUserData().then(response => {\n        if (response) {\n          setCurrentUser(response.data);\n          setIsLoggedIn(true);\n        }\n      }).catch(err => {\n        if (err.status === 401) {\n          handleUserSignout();\n        } else {\n          handleUserSignout();\n          setIsPopupOpened(true);\n          setIsSucceeded(false);\n          setPopupMessage(`Произошла ошибка! Текст: ${err.statusText}`);\n        }\n      });\n    }\n  };\n  const handleUserRegistration = ({\n    name,\n    email,\n    password\n  }) => {\n    mainApi.createUser({\n      name,\n      email,\n      password\n    }).then(() => {\n      handleUserLogin({\n        email,\n        password\n      });\n      navigate(\"/movies\");\n    }).catch(err => {\n      console.log(err);\n      if (err.status === 409) {\n        setIsSucceeded(false);\n        setPopupMessage(\"В базе уже имеется пользователь с таким же email.\");\n        setIsPopupOpened(true);\n      }\n      if (err.status === 500) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\n        setIsPopupOpened(true);\n      }\n    });\n  };\n  const handleUserLogin = ({\n    email,\n    password\n  }) => {\n    mainApi.authorizeUser({\n      email,\n      password\n    }).then(data => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        setIsLoggedIn(true);\n        checkTokenExistance();\n        navigate(\"/movies\");\n      } else {\n        return console.log(\"Что-то пошло не так...\");\n      }\n    }).catch(err => {\n      console.log(err);\n      if (err.status === 401) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Был введен неверный логин или пароль.\");\n        setIsPopupOpened(true);\n      }\n      if (err.status === 500) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\n        setIsPopupOpened(true);\n      }\n    });\n  };\n  const handleUpdateUserInfo = ({\n    name,\n    email\n  }) => {\n    mainApi.setUserData({\n      name,\n      email\n    }).then(newUserData => {\n      setCurrentUser({\n        name: newUserData.name,\n        email: newUserData.email\n      });\n      console.log(CurrentUserContext);\n      setIsPopupOpened(true);\n      setIsSucceeded(true);\n      setPopupMessage(\"Данные о пользователе были обновлены.\");\n    }).catch(err => {\n      setIsPopupOpened(true);\n      setIsSucceeded(false);\n      setPopupMessage(`Произошла ошибка: ${err}`);\n    });\n  };\n  useEffect(() => {\n    Promise.all([moviesApi.getAllMovies()]).then(([movies]) => {\n      setMoviesList(movies);\n    }).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    checkTokenExistance();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          index: true,\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"signin\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Login, {\n              onLoginClick: handleUserLogin\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"signup\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: isLoggedIn ? /*#__PURE__*/_jsxDEV(Navigate, {\n              to: \"/\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Register, {\n              onRegisterClick: handleUserRegistration\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"profile\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Profile, {\n              handleUserSignout: handleUserSignout,\n              handleUpdateUserData: handleUpdateUserInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 290,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Movies, {\n              moviesList: moviesList,\n              onProcessSearchRequest: processSearchMovieRequest,\n              foundMoviesList: foundMoviesList,\n              savedMoviesList: savedMoviesList,\n              preloaderState: preloaderDisplayState,\n              onChangeCheckboxState: onChangeCheckboxState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"saved-movies\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Header, {\n              isLoggedIn: isLoggedIn,\n              isBurgerOpened: isBurgerOpened,\n              onBurgerClick: onBurgerClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(SavedMovies, {\n              moviesList: moviesList,\n              onProcessSearchRequest: processSearchSavedMovieRequest,\n              foundMoviesList: foundMoviesList,\n              savedMoviesList: savedMoviesList,\n              preloaderState: preloaderDisplayState,\n              onChangeCheckboxState: onChangeCheckboxStateSavedMovies\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Page404, {\n            navigate: navigate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Popup, {\n        isOpened: isPopupOpened,\n        onClose: closePopup,\n        isSucceeded: isSucceeded,\n        message: popupMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5j2xb7ZYTUGvRxx+9u1y3fdmVdI=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["mainApi","moviesApi","Route","Routes","useNavigate","Navigate","CurrentUserContext","React","useState","useEffect","Header","Footer","Main","Movies","SavedMovies","Page404","Register","Login","Profile","Popup","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","navigate","currentUser","setCurrentUser","email","name","_id","isLoggedIn","setIsLoggedIn","isBurgerOpened","setIsBurgerOpened","moviesList","setMoviesList","foundMoviesList","setFoundMoviesList","savedMoviesList","setSavedMoviesList","checkboxState","setCheckboxState","preloaderDisplayState","setPreloaderDisplayState","isPopupOpened","setIsPopupOpened","isSucceeded","setIsSucceeded","popupMessage","setPopupMessage","onBurgerClick","closePopup","processSearchMovieRequest","request","isCheckboxOn","length","searchedMovies","filter","element","nameRU","toLowerCase","includes","nameEN","localStorage","setItem","JSON","stringify","getAllMovies","then","result","catch","err","console","log","finally","processSearchSavedMovieRequest","searchedSavedMovies","onChangeCheckboxState","movies","parse","getItem","filteredMoviesList","duration","onChangeCheckboxStateSavedMovies","handleUserSignout","clear","id","checkTokenExistance","getUserData","response","data","status","statusText","handleUserRegistration","password","createUser","handleUserLogin","authorizeUser","token","handleUpdateUserInfo","setUserData","newUserData","Promise","all","Provider","value","children","className","index","fileName","_jsxFileName","lineNumber","columnNumber","path","to","onLoginClick","onRegisterClick","handleUpdateUserData","onProcessSearchRequest","preloaderState","isOpened","onClose","message","_c","$RefreshReg$"],"sources":["C:/Users/Andrey/Documents/GitHub/movies-explorer-frontend/src/components/App/App.js"],"sourcesContent":["import \"./App.css\";\n\nimport mainApi from \"../../utils/MainApi\";\nimport moviesApi from \"../../utils/MoviesApi\";\n\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\nimport React, { useState, useEffect } from \"react\";\n\nimport Header from \"../Header/Header\";\nimport Footer from \"../Footer/Footer\";\nimport Main from \"../Main/Main\";\nimport Movies from \"../Movies/Movies\";\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\nimport Page404 from \"../Page404/Page404\";\n\nimport Register from \"../Register/Register\";\nimport Login from \"../Login/Login\";\nimport Profile from \"../Profile/Profile\";\n\nimport Popup from \"../Popup/Popup\";\n\nconst App = () => {\n  const navigate = useNavigate();\n\n  // Статусы пользователя\n  const [currentUser, setCurrentUser] = useState({\n    email: \"\",\n    name: \"\",\n    _id: \"\",\n  });\n\n  // Статусы Бургер-меню\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [isBurgerOpened, setIsBurgerOpened] = useState(false);\n\n  // Статусы фильмов\n  const [moviesList, setMoviesList] = useState([]);\n  const [foundMoviesList, setFoundMoviesList] = useState([]);\n  const [savedMoviesList, setSavedMoviesList] = useState([]);\n\n  // Статус чекбокса\n  const [checkboxState, setCheckboxState] = useState(true);\n\n  // Статусы отображения прелоадера\n  const [preloaderDisplayState, setPreloaderDisplayState] = useState(false);\n\n  // Статусы отображения попапа\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\n  const [isSucceeded, setIsSucceeded] = useState(false);\n  const [popupMessage, setPopupMessage] = useState(\"\");\n\n  const onBurgerClick = () => {\n    setIsBurgerOpened(!isBurgerOpened);\n  }\n\n  const closePopup = () => {\n    setIsPopupOpened(false);\n  }\n\n  const processSearchMovieRequest = (request, isCheckboxOn) => {\n    if (moviesList.length !== 0) {\n      const searchedMovies = moviesList.filter((element) =>\n        element.nameRU.toLowerCase().includes(request.toLowerCase()) || \n        element.nameEN.toLowerCase().includes(request.toLowerCase())\n      );\n      if (searchedMovies.length === 0) {\n        setIsSucceeded(false);\n        setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\n        setIsPopupOpened(true);\n      } else {\n        setCheckboxState(false);\n        localStorage.setItem(\"requestText\", request);\n        localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\n        localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n        setFoundMoviesList(searchedMovies);\n      }\n      return;\n    } else {\n      setPreloaderDisplayState(true);\n      moviesApi\n      .getAllMovies()\n      .then((result) => {\n        const searchedMovies = result.filter((element) =>\n          element.nameRU.toLowerCase().includes(request.toLowerCase()) ||\n          element.nameEN.toLowerCase().includes(request.toLowerCase())\n        );\n        if (searchedMovies.length === 0) {\n          setIsSucceeded(false);\n          setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\n          setIsPopupOpened(true);\n        } else {\n          setCheckboxState(false);\n          localStorage.setItem(\"moviesList\", JSON.stringify(result));\n          setMoviesList(result);\n          localStorage.setItem(\"requestText\", request);\n          localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\n          localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n          setFoundMoviesList(searchedMovies);\n        }\n    })\n    .catch((err) => console.log(err))\n    .finally(() => setPreloaderDisplayState(false));\n    }\n  };\n\n  const processSearchSavedMovieRequest = (request, isCheckboxOn) => {\n    setPreloaderDisplayState(true);\n    const searchedSavedMovies = savedMoviesList.filter((element) =>\n      element.nameRU.toLowerCase().includes(request.toLowerCase()) ||\n      element.nameEN.toLowerCase().includes(request.toLowerCase())\n    );\n    if (searchedSavedMovies.length === 0) {\n      setIsPopupOpened(true);\n      setPopupMessage(\"По вашему запросу ничего не найдено.\");\n      setIsSucceeded(false);\n      setPreloaderDisplayState(false);\n    } else {\n      setCheckboxState(false);\n      localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\n      setSavedMoviesList(searchedSavedMovies);\n      setPreloaderDisplayState(false);\n    }\n  }\n\n  const onChangeCheckboxState = (isCheckboxOn) => {\n    const movies = JSON.parse(localStorage.getItem(\"searchedMovies\"));\n    let filteredMoviesList = movies;\n    if (isCheckboxOn) {\n      filteredMoviesList = movies.filter((element) => element.duration <= 40);\n    }\n    setFoundMoviesList(filteredMoviesList);\n    localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\n  };\n\n  const onChangeCheckboxStateSavedMovies = (isCheckboxOn) => {\n    if (isCheckboxOn) {\n      setSavedMoviesList(savedMoviesList.filter((element) => element.duration <= 40));\n    } else if (!isCheckboxOn) {\n      setSavedMoviesList(savedMoviesList);\n    }\n    localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\n  }\n\n  const handleUserSignout = () => {\n    localStorage.clear();\n    setMoviesList([]);\n    setFoundMoviesList([]);\n    setSavedMoviesList([]);\n    setCurrentUser({ \n      name: \"\", \n      email: \"\", \n      id: \"\" \n    });\n    setIsLoggedIn(false);\n    navigate(\"/\");\n  }\n\n  const checkTokenExistance = () => {\n    if (localStorage.getItem(\"jwt\")) {\n      mainApi.getUserData().then((response) => {\n        if (response) {\n          setCurrentUser(response.data);\n          setIsLoggedIn(true);\n        }\n      }).catch((err) => {\n        if (err.status === 401) {\n          handleUserSignout();\n        } else {\n          handleUserSignout();\n          setIsPopupOpened(true);\n          setIsSucceeded(false);\n          setPopupMessage(`Произошла ошибка! Текст: ${err.statusText}`);\n        }\n      });\n    }\n  }\n\n  const handleUserRegistration = ({ name, email, password }) => {\n    mainApi.createUser({ name, email, password }).then(() => {\n      handleUserLogin({ email, password });\n      navigate(\"/movies\");\n    }).catch((err) => {\n      console.log(err);\n      if (err.status === 409) {\n        setIsSucceeded(false);\n        setPopupMessage(\"В базе уже имеется пользователь с таким же email.\");\n        setIsPopupOpened(true);\n      }\n      if (err.status === 500) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\n        setIsPopupOpened(true);\n      }\n    });\n  }\n\n  const handleUserLogin = ({ email, password }) => {\n    mainApi.authorizeUser({ email, password }).then((data) => {\n      if (data.token) {\n        localStorage.setItem(\"jwt\", data.token);\n        setIsLoggedIn(true);\n        checkTokenExistance();\n        navigate(\"/movies\");\n      } else {\n        return console.log(\"Что-то пошло не так...\");\n      }\n    }).catch((err) => {\n      console.log(err);\n      if (err.status === 401) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Был введен неверный логин или пароль.\");\n        setIsPopupOpened(true);\n      }\n      if (err.status === 500) {\n        setIsSucceeded(false);\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\n        setIsPopupOpened(true);\n      }\n    });\n  }\n\n  const handleUpdateUserInfo = ({ name, email }) => {\n    mainApi.setUserData({ name, email }).then((newUserData) => {\n      setCurrentUser({\n        name: newUserData.name,\n        email: newUserData.email\n      });\n      console.log(CurrentUserContext);\n      setIsPopupOpened(true);\n      setIsSucceeded(true);\n      setPopupMessage(\"Данные о пользователе были обновлены.\");\n    })\n    .catch((err) => {\n      setIsPopupOpened(true);\n      setIsSucceeded(false);\n      setPopupMessage(`Произошла ошибка: ${err}`);\n    });\n  }\n\n  useEffect(() => { \n    Promise.all([moviesApi.getAllMovies()])\n      .then(([movies]) => {\n        setMoviesList(movies);\n      })\n      .catch((err) => console.log(err));\n  }, []); \n\n  useEffect(() => {\n    checkTokenExistance();\n  }, []);\n\n  return (\n    <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"app\">\n        <Routes>\n          <Route index element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Main />\n              <Footer />\n            </>\n          } />\n          <Route path=\"signin\" element={\n            <>\n              {isLoggedIn ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <Login onLoginClick={handleUserLogin}/>\n              )}\n            </>\n          } />\n          <Route path=\"signup\" element={\n            <>\n              {isLoggedIn ? (\n                <Navigate to=\"/\" />\n              ) : (\n                <Register onRegisterClick={handleUserRegistration}/>\n              )}\n            </>\n          } />\n          <Route path=\"profile\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Profile handleUserSignout={handleUserSignout} handleUpdateUserData={handleUpdateUserInfo}/>\n            </>\n          } />\n          <Route path=\"movies\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <Movies\n                moviesList={moviesList}\n                onProcessSearchRequest={processSearchMovieRequest}\n                foundMoviesList={foundMoviesList}\n                savedMoviesList={savedMoviesList}\n                preloaderState={preloaderDisplayState}\n                onChangeCheckboxState={onChangeCheckboxState}\n              />\n              <Footer />\n            </>\n          } />\n          <Route path=\"saved-movies\" element={\n            <>\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\n              <SavedMovies \n                moviesList={moviesList}\n                onProcessSearchRequest={processSearchSavedMovieRequest}\n                foundMoviesList={foundMoviesList}\n                savedMoviesList={savedMoviesList}\n                preloaderState={preloaderDisplayState}\n                onChangeCheckboxState={onChangeCheckboxStateSavedMovies}\n              />\n              <Footer />\n            </>\n          } />\n          <Route path=\"*\" element={<Page404 navigate={navigate}/>} />\n        </Routes>\n        <Popup\n          isOpened={isPopupOpened}\n          onClose={closePopup}\n          isSucceeded={isSucceeded}\n          message={popupMessage}\n        />\n      </div>\n    </CurrentUserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}