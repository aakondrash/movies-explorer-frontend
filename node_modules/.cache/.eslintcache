[{"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\App\\App.js":"1","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js":"2","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Login\\Login.js":"3","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\Movies.js":"4","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Profile\\Profile.js":"5","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Register\\Register.js":"6","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\SearchForm.js":"7","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCardList\\MoviesCardList.js":"8","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCard\\MoviesCard.js":"9","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\index.js":"10","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\reportWebVitals.js":"11","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js":"12","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Footer\\Footer.js":"13","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Main.js":"14","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Header\\Header.js":"15","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Page404\\Page404.js":"16","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Burger\\Burger.js":"17","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Navigation\\Navigation.js":"18","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Promo\\Promo.js":"19","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Portfolio\\Portfolio.js":"20","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\AboutProject\\AboutProject.js":"21","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Techs\\Techs.js":"22","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\NavTab\\NavTab.js":"23","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\AboutMe\\AboutMe.js":"24","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\Preloader\\Preloader.js":"25","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\convertDuration.js":"26","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Popup\\Popup.js":"27","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\MainApi.js":"28","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\MoviesApi.js":"29"},{"size":13290,"mtime":1697111887251,"results":"30","hashOfConfig":"31"},{"size":822,"mtime":1697111887260,"results":"32","hashOfConfig":"31"},{"size":3203,"mtime":1697111887252,"results":"33","hashOfConfig":"31"},{"size":788,"mtime":1697111887252,"results":"34","hashOfConfig":"31"},{"size":3997,"mtime":1697111887259,"results":"35","hashOfConfig":"31"},{"size":3931,"mtime":1697111887260,"results":"36","hashOfConfig":"31"},{"size":3241,"mtime":1697111887256,"results":"37","hashOfConfig":"31"},{"size":2919,"mtime":1697111887254,"results":"38","hashOfConfig":"31"},{"size":2165,"mtime":1697111887253,"results":"39","hashOfConfig":"31"},{"size":446,"mtime":1697112606510,"results":"40","hashOfConfig":"31"},{"size":375,"mtime":1697112606511,"results":"41","hashOfConfig":"31"},{"size":90,"mtime":1697112606504,"results":"42","hashOfConfig":"31"},{"size":1038,"mtime":1697112606487,"results":"43","hashOfConfig":"31"},{"size":440,"mtime":1697112606491,"results":"44","hashOfConfig":"31"},{"size":1359,"mtime":1697112606487,"results":"45","hashOfConfig":"31"},{"size":465,"mtime":1697112606500,"results":"46","hashOfConfig":"31"},{"size":1398,"mtime":1697112606486,"results":"47","hashOfConfig":"31"},{"size":1341,"mtime":1697112606499,"results":"48","hashOfConfig":"31"},{"size":1084,"mtime":1697112606493,"results":"49","hashOfConfig":"31"},{"size":1340,"mtime":1697112606492,"results":"50","hashOfConfig":"31"},{"size":1956,"mtime":1697112606490,"results":"51","hashOfConfig":"31"},{"size":1031,"mtime":1697112606494,"results":"52","hashOfConfig":"31"},{"size":427,"mtime":1697112606491,"results":"53","hashOfConfig":"31"},{"size":1393,"mtime":1697112606489,"results":"54","hashOfConfig":"31"},{"size":321,"mtime":1697112606497,"results":"55","hashOfConfig":"31"},{"size":330,"mtime":1697112606512,"results":"56","hashOfConfig":"31"},{"size":765,"mtime":1697111887258,"results":"57","hashOfConfig":"31"},{"size":3135,"mtime":1697111887263,"results":"58","hashOfConfig":"31"},{"size":622,"mtime":1697111887263,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"2w4lh3",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","suppressedMessages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\App\\App.js",["150","151","152"],[],"import \"./App.css\";\r\n\r\nimport mainApi from \"../../utils/MainApi\";\r\nimport moviesApi from \"../../utils/MoviesApi\";\r\n\r\nimport { Route, Routes, useNavigate, Navigate } from \"react-router-dom\";\r\nimport { CurrentUserContext } from \"../../contexts/CurrentUserContext.js\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport Header from \"../Header/Header\";\r\nimport Footer from \"../Footer/Footer\";\r\nimport Main from \"../Main/Main\";\r\nimport Movies from \"../Movies/Movies\";\r\nimport SavedMovies from \"../SavedMovies/SavedMovies\";\r\nimport Page404 from \"../Page404/Page404\";\r\n\r\nimport Register from \"../Register/Register\";\r\nimport Login from \"../Login/Login\";\r\nimport Profile from \"../Profile/Profile\";\r\n\r\nimport Popup from \"../Popup/Popup\";\r\n\r\nconst App = () => {\r\n  const navigate = useNavigate();\r\n\r\n  // Статусы пользователя\r\n  const [currentUser, setCurrentUser] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    _id: \"\",\r\n  });\r\n\r\n  // Статусы Бургер-меню\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [isBurgerOpened, setIsBurgerOpened] = useState(false);\r\n\r\n  // Статусы фильмов\r\n  const [moviesList, setMoviesList] = useState([]);\r\n  const [foundMoviesList, setFoundMoviesList] = useState([]);\r\n  const [savedMoviesList, setSavedMoviesList] = useState([]);\r\n  const [savedMoviesListInit, setSavedMoviesListInit] = useState([]);\r\n\r\n  // Статус чекбокса\r\n  const [checkboxState, setCheckboxState] = useState(true);\r\n\r\n  // Статусы отображения прелоадера\r\n  const [preloaderDisplayState, setPreloaderDisplayState] = useState(false);\r\n\r\n  // Статусы отображения попапа\r\n  const [isPopupOpened, setIsPopupOpened] = useState(false);\r\n  const [isSucceeded, setIsSucceeded] = useState(false);\r\n  const [popupMessage, setPopupMessage] = useState(\"\");\r\n\r\n  const onBurgerClick = () => {\r\n    setIsBurgerOpened(!isBurgerOpened);\r\n  }\r\n\r\n  const closePopup = () => {\r\n    setIsPopupOpened(false);\r\n  }\r\n\r\n  const processSearchMovieRequest = (request, isCheckboxOn) => {\r\n    if (moviesList && moviesList.length !== 0) {\r\n      const searchedMovies = moviesList.filter((element) =>\r\n        element.nameRU.toLowerCase().includes(request.toLowerCase()) || \r\n        element.nameEN.toLowerCase().includes(request.toLowerCase())\r\n      );\r\n      if (searchedMovies.length === 0) {\r\n        setIsSucceeded(false);\r\n        setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\r\n        setIsPopupOpened(true);\r\n      } else {\r\n        setCheckboxState(false);\r\n        localStorage.setItem(\"requestText\", request);\r\n        localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\r\n        localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\r\n        setFoundMoviesList(searchedMovies);\r\n      }\r\n      return;\r\n    } else {\r\n      setPreloaderDisplayState(true);\r\n      moviesApi\r\n      .getAllMovies()\r\n      .then((result) => {\r\n        const searchedMovies = result.filter((element) =>\r\n          element.nameRU.toLowerCase().includes(request.toLowerCase()) ||\r\n          element.nameEN.toLowerCase().includes(request.toLowerCase())\r\n        );\r\n        if (searchedMovies.length === 0) {\r\n          setIsSucceeded(false);\r\n          setPopupMessage(`По ключевому слову \"${request}\" фильмов не найдено`);\r\n          setIsPopupOpened(true);\r\n        } else {\r\n          setCheckboxState(false);\r\n          localStorage.setItem(\"moviesList\", JSON.stringify(result));\r\n          setMoviesList(result);\r\n          localStorage.setItem(\"requestText\", request);\r\n          localStorage.setItem(\"searchedMovies\", JSON.stringify(searchedMovies));\r\n          localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\r\n          setFoundMoviesList(searchedMovies);\r\n        }\r\n    })\r\n    .catch((err) => console.log(err))\r\n    .finally(() => setPreloaderDisplayState(false));\r\n    }\r\n  };\r\n\r\n  const processSearchSavedMovieRequest = (request, isCheckboxOn) => {\r\n    setPreloaderDisplayState(true);\r\n    const searchedSavedMovies = savedMoviesList.filter((element) =>\r\n      element.nameRU.toLowerCase().includes(request.toLowerCase()) ||\r\n      element.nameEN.toLowerCase().includes(request.toLowerCase())\r\n    );\r\n    if (searchedSavedMovies.length === 0) {\r\n      setIsPopupOpened(true);\r\n      setPopupMessage(\"По вашему запросу ничего не найдено.\");\r\n      setIsSucceeded(false);\r\n      setPreloaderDisplayState(false);\r\n    } else {\r\n      setCheckboxState(false);\r\n      localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\r\n      setSavedMoviesList(searchedSavedMovies);\r\n      setPreloaderDisplayState(false);\r\n    }\r\n  }\r\n\r\n  const onChangeCheckboxState = (isCheckboxOn) => {\r\n    const movies = JSON.parse(localStorage.getItem(\"searchedMovies\"));\r\n    let filteredMoviesList = movies;\r\n    if (isCheckboxOn && movies) {\r\n      filteredMoviesList = movies.filter((element) => element.duration <= 40);\r\n    }\r\n    setFoundMoviesList(filteredMoviesList);\r\n    localStorage.setItem(\"checkboxState\", JSON.stringify(isCheckboxOn));\r\n  };\r\n\r\n  const onChangeCheckboxStateSavedMovies = (isCheckboxOn) => {\r\n    if (isCheckboxOn) {\r\n      setSavedMoviesList(savedMoviesList.filter((element) => element.duration <= 40));\r\n    } else if (!isCheckboxOn) {\r\n      setSavedMoviesList(savedMoviesListInit);\r\n    }\r\n    localStorage.setItem(\"checkboxStateSavedMovies\", JSON.stringify(isCheckboxOn));\r\n  }\r\n\r\n  const handleUserSignout = () => {\r\n    localStorage.clear();\r\n    setMoviesList([]);\r\n    setFoundMoviesList([]);\r\n    setSavedMoviesList([]);\r\n    setCurrentUser({ \r\n      name: \"\", \r\n      email: \"\", \r\n      id: \"\" \r\n    });\r\n    setIsLoggedIn(false);\r\n    navigate(\"/\");\r\n  }\r\n\r\n  const checkTokenExistance = () => {\r\n    if (localStorage.getItem(\"jwt\")) {\r\n      mainApi.getUserData().then((response) => {\r\n        if (response) {\r\n          setCurrentUser(response.data);\r\n          setIsLoggedIn(true);\r\n        }\r\n      }).catch((err) => {\r\n        if (err.status === 401) {\r\n          handleUserSignout();\r\n        } else {\r\n          handleUserSignout();\r\n          setIsPopupOpened(true);\r\n          setIsSucceeded(false);\r\n          setPopupMessage(`Произошла ошибка! Текст: ${err.statusText}`);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleUserRegistration = ({ name, email, password }) => {\r\n    mainApi.createUser({ name, email, password }).then(() => {\r\n      handleUserLogin({ email, password });\r\n      navigate(\"/movies\");\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      if (err.status === 409) {\r\n        setIsSucceeded(false);\r\n        setPopupMessage(\"В базе уже имеется пользователь с таким же email.\");\r\n        setIsPopupOpened(true);\r\n      }\r\n      if (err.status === 500) {\r\n        setIsSucceeded(false);\r\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\r\n        setIsPopupOpened(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleUserLogin = ({ email, password }) => {\r\n    mainApi.authorizeUser({ email, password }).then((data) => {\r\n      if (data.token) {\r\n        localStorage.setItem(\"jwt\", data.token);\r\n        setIsLoggedIn(true);\r\n        checkTokenExistance();\r\n        navigate(\"/movies\");\r\n      } else {\r\n        return console.log(\"Что-то пошло не так...\");\r\n      }\r\n    }).catch((err) => {\r\n      console.log(err);\r\n      if (err.status === 401) {\r\n        setIsSucceeded(false);\r\n        setPopupMessage(\"Был введен неверный логин или пароль.\");\r\n        setIsPopupOpened(true);\r\n      }\r\n      if (err.status === 500) {\r\n        setIsSucceeded(false);\r\n        setPopupMessage(\"Произошла непредвиденная ошибка. Попробуйте еще раз позже.\");\r\n        setIsPopupOpened(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  const handleUpdateUserInfo = ({ name, email }) => {\r\n    mainApi.setUserData({ name, email }).then((newUserData) => {\r\n      setCurrentUser(newUserData.data);\r\n      setIsPopupOpened(true);\r\n      setIsSucceeded(true);\r\n      setPopupMessage(\"Данные о пользователе были обновлены.\");\r\n    })\r\n    .catch((err) => {\r\n      setIsPopupOpened(true);\r\n      setIsSucceeded(false);\r\n      setPopupMessage(`Произошла ошибка: ${err}`);\r\n    });\r\n  }\r\n\r\n  const getSavedMoviesList = () => {\r\n    mainApi.getSavedMovies().then((movies) => {\r\n      if (movies.data) {\r\n        const userSavedMovies = movies.data.filter((mov) => mov.owner === currentUser._id);\r\n        setSavedMoviesList(userSavedMovies);\r\n        setSavedMoviesListInit(userSavedMovies);\r\n      } else {\r\n        setSavedMoviesList([]);\r\n        setSavedMoviesListInit([]);\r\n      }\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  const handleDeleteSavedMovie = (movie) => {\r\n    mainApi.deleteExistentMovie(movie.movieId).then(() => {\r\n      const updateUserSavedMovies = savedMoviesList.filter((mov) => mov.movieId !== movie.movieId);\r\n      setSavedMoviesList(updateUserSavedMovies);\r\n      setSavedMoviesListInit(savedMoviesListInit.filter((mov) => mov._id !== movie._id));\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  const handleSaveMovie = (movie) => {\r\n    mainApi.addNewMovie(movie).then((res) => {\r\n      setSavedMoviesList(savedMoviesList.concat(res.data));\r\n      setSavedMoviesListInit(savedMoviesListInit.concat(res.data));\r\n    })\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  useEffect(() => { \r\n    Promise.all([moviesApi.getAllMovies()])\r\n      .then(([movies]) => {\r\n        setMoviesList(movies);\r\n      })\r\n      .catch((err) => console.log(err));\r\n  }, []); \r\n\r\n  useEffect(() => {\r\n    checkTokenExistance();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn && currentUser) {\r\n      getSavedMoviesList();\r\n    }\r\n  }, [isLoggedIn, currentUser]);\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <div className=\"app\">\r\n        <Routes>\r\n          <Route index element={\r\n            <>\r\n              <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\r\n              <Main />\r\n              <Footer />\r\n            </>\r\n          } />\r\n          <Route path=\"signin\" element={\r\n            isLoggedIn ? (\r\n              <Navigate to=\"/\" />\r\n            ) : (\r\n              <Login onLoginClick={handleUserLogin}/>\r\n            )\r\n          } />\r\n          <Route path=\"signup\" element={\r\n            isLoggedIn ? (\r\n              <Navigate to=\"/\" />\r\n            ) : (\r\n              <Register onRegisterClick={handleUserRegistration}/>\r\n            )\r\n          } />\r\n          <Route path=\"profile\" element={\r\n            isLoggedIn ? (\r\n              <>\r\n                <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\r\n                <Profile handleUserSignout={handleUserSignout} handleUpdateUserData={handleUpdateUserInfo}/>\r\n              </>\r\n            ) : <Navigate to=\"/\" replace/>\r\n          } />\r\n          <Route path=\"movies\" element={\r\n            isLoggedIn ? (\r\n              <>\r\n                <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\r\n                <Movies\r\n                  moviesList={moviesList}\r\n                  onProcessSearchRequest={processSearchMovieRequest}\r\n                  foundMoviesList={foundMoviesList}\r\n                  savedMoviesList={savedMoviesList}\r\n                  preloaderState={preloaderDisplayState}\r\n                  onChangeCheckboxState={onChangeCheckboxState}\r\n                  handleDeleteSavedMovie={handleDeleteSavedMovie}\r\n                  handleSaveMovie={handleSaveMovie}\r\n                />\r\n                <Footer />\r\n              </>\r\n            ) : <Navigate to=\"/\" replace/>\r\n          } />\r\n          <Route path=\"saved-movies\" element={\r\n            isLoggedIn ? (\r\n              <>\r\n                <Header isLoggedIn={isLoggedIn} isBurgerOpened={isBurgerOpened} onBurgerClick={onBurgerClick}/>\r\n                <SavedMovies \r\n                  moviesList={moviesList}\r\n                  onProcessSearchRequest={processSearchSavedMovieRequest}\r\n                  foundMoviesList={foundMoviesList}\r\n                  savedMoviesList={savedMoviesList}\r\n                  preloaderState={preloaderDisplayState}\r\n                  onChangeCheckboxState={onChangeCheckboxStateSavedMovies}\r\n                  handleDeleteSavedMovie={handleDeleteSavedMovie}\r\n                  handleSaveMovie={handleSaveMovie}\r\n                />\r\n                <Footer />\r\n              </>\r\n            ) : <Navigate to=\"/\" replace/>\r\n          } />\r\n          <Route path=\"*\" element={<Page404 navigate={navigate}/>} />\r\n        </Routes>\r\n        <Popup\r\n          isOpened={isPopupOpened}\r\n          onClose={closePopup}\r\n          isSucceeded={isSucceeded}\r\n          message={popupMessage}\r\n        />\r\n      </div>\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\SavedMovies\\SavedMovies.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Login\\Login.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\Movies.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Profile\\Profile.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Register\\Register.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\SearchForm\\SearchForm.js",["153"],[],"import { useLocation } from \"react-router-dom\";\r\n\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst SearchForm = ({ onSearch, onTickCheckbox }) => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [checkboxState, setCheckboxState] = useState(false);\r\n\r\n  const [searchError, setSearchError] = useState({\r\n    errorMessage: \"\",\r\n    isSearchValid: true\r\n  });\r\n\r\n  const location = useLocation();\r\n\r\n  const handleSearchTyping = (e) => {\r\n    setSearchValue(e.target.value);\r\n    if (e.target.value.length !== 0) {\r\n      setSearchError({\r\n        errorMessage: \"\",\r\n        isSearchValid: e.target.validity.valid\r\n      });\r\n    } else {\r\n      setSearchError({\r\n        errorMessage: \"Введите ключевое слово\",\r\n        isSearchValid: e.target.validity.valid,\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSearchSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!searchValue) {\r\n      return setSearchError({\r\n        errorMessage: \"Введите ключевое слово\",\r\n        isValid: false,\r\n      });\r\n    } else {\r\n      onSearch(searchValue, checkboxState);\r\n    }\r\n  }\r\n\r\n  const handleCheckboxStateChange = () => {\r\n    setCheckboxState(!checkboxState);\r\n    onTickCheckbox(!checkboxState);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/movies\") {\r\n      setSearchValue(localStorage.getItem(\"requestText\"));\r\n      setCheckboxState(JSON.parse(localStorage.getItem(\"checkboxState\")));\r\n      setSearchError({\r\n        errorMessage: \"\",\r\n        isSearchValid: true\r\n      });\r\n      onTickCheckbox(JSON.parse(localStorage.getItem(\"checkboxState\")));\r\n    } else if (location.pathname === \"/saved-movies\") {\r\n      setCheckboxState(JSON.parse(localStorage.getItem(\"checkboxStateSavedMovies\")));\r\n      onTickCheckbox(JSON.parse(localStorage.getItem(\"checkboxStateSavedMovies\")));\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <section className=\"search\">\r\n      <form\r\n        name=\"search-movie\"\r\n        className=\"search__container\"\r\n        onSubmit={handleSearchSubmit}\r\n        noValidate\r\n      >\r\n        <input\r\n          className={`search__input ${!searchError.isSearchValid && \"search__input_error\"}`}\r\n          placeholder=\"Фильм\"\r\n          required\r\n          name=\"movie\"\r\n          type=\"text\"\r\n          value={searchValue || \"\"}\r\n          onChange={handleSearchTyping}\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className={`search__button ${!searchError.isSearchValid ? \"search__button_error\" : \"\"}`}\r\n          disabled={!searchError.isSearchValid}\r\n        ></button>\r\n      </form>\r\n      <span className=\"search__input_invalid\">\r\n        {searchError.errorMessage}\r\n      </span>\r\n      <form className=\"search__filter\">\r\n        <label className=\"search__filter-container\">\r\n          <input\r\n            className=\"search__filter-checkbox\"\r\n            type=\"checkbox\"\r\n            onChange={handleCheckboxStateChange}\r\n            checked={checkboxState ? true : false}\r\n          />\r\n          <span className=\"search__filter-toggle\"></span>\r\n          <span className=\"search__filter-caption\">Короткометражки</span>\r\n        </label>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCardList\\MoviesCardList.js",["154","155"],[],"import MoviesCard from \"../MoviesCard/MoviesCard\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst MoviesCardList = ({ moviesList, savedMoviesList, onSaveMovie, onDeleteMovie }) => {\r\n  const [browserWidth, setBrowserWidth] = useState(window.innerWidth);\r\n  const [maxCardsToRender, setMaxCardsToRender] = useState(12)\r\n\r\n  const [moviesToRender, setMoviesToRender] = useState([]);\r\n\r\n  const location = useLocation();\r\n\r\n  const setDefaultMoviesVisible = (number) => {\r\n    setMaxCardsToRender(number);\r\n    let movies = [];\r\n    if (moviesList) {\r\n      moviesList.forEach((element, i) => {\r\n        if (i < number) {\r\n          movies.push(element);\r\n        }\r\n      });\r\n    }\r\n    setMoviesToRender(movies);\r\n  }\r\n\r\n  const setMoviesVisible = () => {\r\n    let movies = [];\r\n    if (moviesList) {\r\n      moviesList.forEach((element, i) => {\r\n        if (i < maxCardsToRender) {\r\n          movies.push(element);\r\n        }\r\n      });\r\n    }\r\n    setMoviesToRender(movies);\r\n  }\r\n\r\n  const handleMoreButtonClick = () => {\r\n    if (browserWidth < 480) {\r\n      setMaxCardsToRender(maxCardsToRender + 2);\r\n    } else if (browserWidth < 1280) {\r\n      setMaxCardsToRender(maxCardsToRender + 2);\r\n    } else {\r\n      setMaxCardsToRender(maxCardsToRender + 3);\r\n    }\r\n  }\r\n  \r\n  useEffect(() => {\r\n    if (browserWidth < 480) {\r\n      setDefaultMoviesVisible(5);\r\n    } else if (browserWidth < 1280) {\r\n      setDefaultMoviesVisible(8);\r\n    } else {\r\n      setDefaultMoviesVisible(12);\r\n    }\r\n    if (location.pathname === \"/saved-movies\") {\r\n      setMaxCardsToRender(120);\r\n    }\r\n  }, [browserWidth, moviesList, location]);\r\n\r\n  useEffect(() => {\r\n    setMoviesVisible();\r\n  }, [maxCardsToRender]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", () => {\r\n      setTimeout(setBrowserWidth(window.innerWidth), 1000);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"movies-list__wrapper\">\r\n      <ul className=\"movies-list\">\r\n        {moviesToRender.map((movie) => (\r\n          <MoviesCard\r\n            key={movie.id || movie._id}\r\n            movie={movie}\r\n            savedMoviesList={savedMoviesList}\r\n            handleSaveCurrentMovie={onSaveMovie}\r\n            handleDeleteCurrentMovie={onDeleteMovie}\r\n          />\r\n        ))}\r\n      </ul>\r\n      {\r\n        location.pathname === \"/movies\" ? (\r\n          !moviesList || (moviesToRender.length !== moviesList.length) ? (\r\n            <button\r\n            className=\"movies-list__button\"\r\n            type=\"button\"\r\n            onClick={handleMoreButtonClick}\r\n            >\r\n              Ещё\r\n            </button>\r\n          ) : (\r\n            <div className=\"movies-list__button-replacement\"></div>\r\n          )\r\n        ) : (\r\n          <div className=\"movies-list__button-replacement\"></div>\r\n        )\r\n      }\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default MoviesCardList;","C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\MoviesCard\\MoviesCard.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\index.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Footer\\Footer.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Main.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Header\\Header.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Page404\\Page404.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Burger\\Burger.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Navigation\\Navigation.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Promo\\Promo.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Portfolio\\Portfolio.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\AboutProject\\AboutProject.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\Techs\\Techs.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\NavTab\\NavTab.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Main\\AboutMe\\AboutMe.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Movies\\Preloader\\Preloader.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\convertDuration.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\components\\Popup\\Popup.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\MainApi.js",[],[],"C:\\Users\\Andrey\\Documents\\GitHub\\movies-explorer-frontend\\src\\utils\\MoviesApi.js",[],[],{"ruleId":"156","severity":1,"message":"157","line":44,"column":10,"nodeType":"158","messageId":"159","endLine":44,"endColumn":23},{"ruleId":"160","severity":1,"message":"161","line":279,"column":6,"nodeType":"162","endLine":279,"endColumn":8,"suggestions":"163"},{"ruleId":"160","severity":1,"message":"164","line":285,"column":6,"nodeType":"162","endLine":285,"endColumn":31,"suggestions":"165"},{"ruleId":"160","severity":1,"message":"166","line":61,"column":6,"nodeType":"162","endLine":61,"endColumn":16,"suggestions":"167"},{"ruleId":"160","severity":1,"message":"168","line":59,"column":6,"nodeType":"162","endLine":59,"endColumn":42,"suggestions":"169"},{"ruleId":"160","severity":1,"message":"170","line":63,"column":6,"nodeType":"162","endLine":63,"endColumn":24,"suggestions":"171"},"no-unused-vars","'checkboxState' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkTokenExistance'. Either include it or remove the dependency array.","ArrayExpression",["172"],"React Hook useEffect has a missing dependency: 'getSavedMoviesList'. Either include it or remove the dependency array.",["173"],"React Hook useEffect has a missing dependency: 'onTickCheckbox'. Either include it or remove the dependency array. If 'onTickCheckbox' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["174"],"React Hook useEffect has a missing dependency: 'setDefaultMoviesVisible'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'setMoviesVisible'. Either include it or remove the dependency array.",["176"],{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [checkTokenExistance]",{"range":"187","text":"188"},"Update the dependencies array to be: [isLoggedIn, currentUser, getSavedMoviesList]",{"range":"189","text":"190"},"Update the dependencies array to be: [location, onTickCheckbox]",{"range":"191","text":"192"},"Update the dependencies array to be: [browserWidth, moviesList, location, setDefaultMoviesVisible]",{"range":"193","text":"194"},"Update the dependencies array to be: [maxCardsToRender, setMoviesVisible]",{"range":"195","text":"196"},[9516,9518],"[checkTokenExistance]",[9624,9649],"[isLoggedIn, currentUser, getSavedMoviesList]",[1820,1830],"[location, onTickCheckbox]",[1645,1681],"[browserWidth, moviesList, location, setDefaultMoviesVisible]",[1738,1756],"[maxCardsToRender, setMoviesVisible]"]